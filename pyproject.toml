[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "anytype-api"
version = "1.0.0"
description = "FastAPI backend for Anytype integration"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
dependencies = [
    "fastapi==0.115.12",
    "uvicorn==0.34.0",
    "python-dotenv==1.1.0",
    "httpx==0.28.1",
    "pydantic==2.11.2",
    "python-multipart==0.0.20",
    "pydantic-settings==2.8.1",
    "typer==0.15.2",
    "mcp[cli]==1.2.0",
]

[project.optional-dependencies]
dev = [
    "ruff==0.11.4",
    "pytest==8.3.5",
    "pytest-asyncio==0.26.0",
    "pytest-cov==6.1.1",
    "httpx==0.28.1",
    "mypy==1.15.0",
    "types-python-jose==3.4.0.20250224",
    "types-passlib==1.7.7.20250401",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
ignore_missing_imports = true
explicit_package_bases = true
namespace_packages = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__",
]

# Same as Black.
line-length = 88

# Target Python 3.8+
target-version = "py38"

[tool.ruff.lint]
# Enable all recommended rules + additional ones for code quality
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C90", # mccabe
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "Q",   # flake8-quotes
    "UP",  # pyupgrade
    "A",   # flake8-builtins
    "T20", # flake8-print
    "RUF", # ruff-specific rules
]

# Never try to fix `F401` (unused imports)
unfixable = ["F401"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["app"]
combine-as-imports = true

[tool.ruff.format]
# Use double quotes for strings.
quote-style = "double"

# Indent with spaces, rather than tabs.
indent-style = "space"

# Format docstrings according to PEP 257.
docstring-code-format = true

# Enable auto-formatting of code examples in docstrings.
docstring-code-line-length = "dynamic"

[tool.hatch.build.targets.wheel]
packages = ["app"]
